{"version":3,"sources":["components/Tooltip.js","components/App.js","index.js"],"names":["Tooltip","props","handleMouseEnter","setState","isHovered","handleMouseLeave","state","position","this","style","styles","topPosition","bottomPosition","leftPosition","rightPosition","className","onMouseEnter","onMouseLeave","containerPosition","arrowPosition","Component","top","left","right","borderBottom","borderLeft","borderRight","bottom","borderTop","App","handleOnChange","dropdown","current","value","React","createRef","name","ref","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAGMA,G,8DACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,iBAAmB,WACjB,EAAKC,SAAS,CACZC,WAAW,KAXI,EAgBnBC,iBAAmB,WACjB,EAAKF,SAAS,CACZC,WAAW,KAfb,EAAKE,MAAQ,CACXF,WAAW,GAJI,E,qDAuBV,IAECG,EAAaC,KAAKP,MAAlBM,SACJE,EAAQ,GAGVA,EADe,QAAbF,EACMG,EAAOC,YACO,WAAbJ,EACDG,EAAOE,eACO,SAAbL,EACDG,EAAOG,aACO,UAAbN,EACDG,EAAOI,cAEPJ,EAAOC,YAdV,IAiBCP,EAAcI,KAAKF,MAAnBF,UACR,OACE,yBAAKW,UAAU,qBACb,yBACEA,UAAU,SACVC,aAAcR,KAAKN,iBACnBe,aAAcT,KAAKH,kBAHrB,aAMGD,GACC,yBACEW,UAAU,4BACVN,MAAOA,EAAMS,mBAFf,UAKE,yBAAKH,UAAU,QAAQN,MAAOA,EAAMU,uB,GAxD5BC,cAkEhBV,EAAS,CAEbE,eAAgB,CACdM,kBAAmB,CAAEG,IAAK,OAAQC,KAAM,OACxCH,cAAe,CACbE,IAAK,QACLE,MAAO,OACPC,aAAc,uBACdC,WAAY,yBACZC,YAAa,2BAIjBf,YAAa,CACXO,kBAAmB,CAAES,OAAQ,OAAQL,KAAM,OAC3CH,cAAe,CACbE,IAAK,OACLC,KAAM,OACNM,UAAW,uBACXH,WAAY,yBACZC,YAAa,2BAIjBb,aAAc,CACZK,kBAAmB,CAAEK,MAAO,OAAQF,IAAK,OACzCF,cAAe,CACbE,IAAK,MACLE,MAAO,QACPE,WAAY,uBACZG,UAAW,yBACXJ,aAAc,2BAIlBV,cAAe,CACbI,kBAAmB,CAAEI,KAAM,OAAQD,IAAK,OACxCF,cAAe,CACbE,IAAK,MACLC,KAAM,QACNI,YAAa,uBACbE,UAAW,yBACXJ,aAAc,4BAKLxB,ICxEA6B,E,kDAvCb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IAUR6B,eAAiB,WACf,EAAK3B,SAAS,CAAEI,SAAU,EAAKwB,SAASC,QAAQC,SAThD,EAAKF,SAAWG,IAAMC,YAEtB,EAAK7B,MAAQ,CACXC,SAAU,IANK,E,qDAiBjB,OACE,yBAAKQ,UAAU,OACb,yBAAKA,UAAU,WAAf,gBACA,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,oBAAf,eACA,4BACEqB,KAAK,WACLC,IAAK7B,KAAKuB,SACVO,SAAU9B,KAAKsB,gBAEf,4BAAQG,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,WAGJ,kBAAC,EAAD,CAAS1B,SAAUC,KAAKF,MAAMC,gB,GAlCpBa,aCClBmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.76fcaa12.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../assets/css/tooltip.css';\n\nclass Tooltip extends Component {\n  constructor(props) {\n    super(props);\n    // state to maintain whether button is hovered or not\n    this.state = {\n      isHovered: false,\n    };\n  }\n\n  // changing hovered to true when button is hovered\n  handleMouseEnter = () => {\n    this.setState({\n      isHovered: true,\n    });\n  };\n\n  // changing hovered to false when button is not hovered\n  handleMouseLeave = () => {\n    this.setState({\n      isHovered: false,\n    });\n  };\n\n  // rendering tooltip container\n  render() {\n    // getting position of the tooltip message container from props\n    const { position } = this.props;\n    let style = '';\n    // setting current position styles based on position received from props;\n    if (position === 'top') {\n      style = styles.topPosition;\n    } else if (position === 'bottom') {\n      style = styles.bottomPosition;\n    } else if (position === 'left') {\n      style = styles.leftPosition;\n    } else if (position === 'right') {\n      style = styles.rightPosition;\n    } else {\n      style = styles.topPosition;\n    }\n    // getting current hovered status\n    const { isHovered } = this.state;\n    return (\n      <div className=\"tooltip-container\">\n        <div\n          className=\"button\"\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n        >\n          Hover Here\n          {isHovered && (\n            <div\n              className=\"tooltip-message-container\"\n              style={style.containerPosition}\n            >\n              Hovered\n              <div className=\"arrow\" style={style.arrowPosition}></div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n// styles of tooltip container position and arrow position based on different position\nconst styles = {\n  // for bottom position\n  bottomPosition: {\n    containerPosition: { top: '120%', left: '12%' },\n    arrowPosition: {\n      top: '-12px',\n      right: '20px',\n      borderBottom: '20px solid #1f0e0ecf',\n      borderLeft: '20px solid transparent',\n      borderRight: '20px solid transparent',\n    },\n  },\n  // for top position\n  topPosition: {\n    containerPosition: { bottom: '120%', left: '12%' },\n    arrowPosition: {\n      top: '42px',\n      left: '37px',\n      borderTop: '20px solid #1f0e0ecf',\n      borderLeft: '20px solid transparent',\n      borderRight: '20px solid transparent',\n    },\n  },\n  // for left position\n  leftPosition: {\n    containerPosition: { right: '107%', top: '16%' },\n    arrowPosition: {\n      top: '5px',\n      right: '-11px',\n      borderLeft: '20px solid #1f0e0ecf',\n      borderTop: '20px solid transparent',\n      borderBottom: '20px solid transparent',\n    },\n  },\n  // for right position\n  rightPosition: {\n    containerPosition: { left: '106%', top: '16%' },\n    arrowPosition: {\n      top: '5px',\n      left: '-11px',\n      borderRight: '20px solid #1f0e0ecf',\n      borderTop: '20px solid transparent',\n      borderBottom: '20px solid transparent',\n    },\n  },\n};\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport '../assets/css/App.css';\nimport Tooltip from './Tooltip';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // reference for dropdown button\n    this.dropdown = React.createRef();\n    // state which contains current value of position\n    this.state = {\n      position: '',\n    };\n  }\n\n  // function to position value in state when dropdown value changes\n  handleOnChange = () => {\n    this.setState({ position: this.dropdown.current.value });\n  };\n\n  // rendering app component\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"heading\">Tooltip Demo</div>\n        <div className=\"dropdown-container\">\n          <div className=\"dropdown-heading\">Position : </div>\n          <select\n            name=\"position\"\n            ref={this.dropdown}\n            onChange={this.handleOnChange}\n          >\n            <option value=\"top\">Top</option>\n            <option value=\"bottom\">Bottom</option>\n            <option value=\"left\">Left</option>\n            <option value=\"right\">Right</option>\n          </select>\n        </div>\n        <Tooltip position={this.state.position} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}